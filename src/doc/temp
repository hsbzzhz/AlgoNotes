
redis数据类型 https://blog.csdn.net/qq_45076180/article/details/109458668

mysql中，redo log 和 undo log区别
https://baijiahao.baidu.com/s?id=1764320037727102597&wfr=spider&for=pc

TC（Transaction coordinator）事务协调者：维护全局和**分支事务**的状态，协调全局事务提交或回滚。
TM（Transaction Manager）事务管理器：定义全局事务的范围、开始全局事务、提交或回滚**全局事务**。
RM（Resource Manager）资源管理器：管理分支事务处理的资源，与TC交谈以注册分支事务和报告分支事务的状态，并驱动分支事务提交或回滚。

整体步骤，
1. 当入口方法执行时，TM会拦截当前的执行，然后向TC发送请求，**注册全局事务**
2. 然后开始执行业务逻辑，从而**调用每个微服务**，开始执行业务
3. RM回去代理分支业务，去TC注册**当前分支事务**
4. TC检查每个事务是否成功，如果全部成功，执行**提交**，否则协调RM**回滚**

2PC两阶段提交，分为准备阶段和提交阶段
准备阶段(P)：TM给每个微服务参与者发送Prepare消息，每个参与者本地执行事务，并写入数据库Undo/Redo日志中，此时**事务没有提交**。
（Undo 日志是记录修改前的数据，用于数据库回滚，Redo 日志是记录修改后的数据，用于提交事务后写入数据文件）
提交阶段（C）：如果TM接收到任何参与者失败消息，直接给每个参与者发送回滚命令，否则发送提交命令
（参与者完成命令后释放资源锁）

【强一致性】传统2PC方案是基于数据库层面实现的，需要数据库支持2PC协议


Seata中的2PC--XA模式

第一阶段：TM开启全局事务，RM注册分支事务到TC；RM执行分支业务但不提交；RM返回执行状态给TC
第二阶段：TC检测每个分支执行状态，如果有一个失败通知RM回滚，否则通知RM提交事务

XA模式优点：【强一致性】【实现简单，没有代码入侵】
XA模式缺点：【等待第二阶段结束才释放锁，性能较差】【对数据库有要求】
